name: Build and Publish Docker Image

on:
  push:
    tags: [ 'v*' ]
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  changed_files:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      changed_python: ${{ steps.changed_python.outputs.any_changed }}
      changed_docker: ${{ steps.changed_docker.outputs.any_changed }}

    steps:
    - uses: actions/checkout@v4

    - name: Get all tests and src files that have changed
      id: changed_python
      uses: tj-actions/changed-files@v46
      with:
        files: |
          exporter/**

    - name: Check if dockerfile has changed
      id: changed_docker
      uses: tj-actions/changed-files@v46
      with:
        files: |
          Dockerfile

  test:
    needs: changed_files
    if: needs.changed_files.outputs.changed_python == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        uv venv
        uv export --script exporter/client.py --format requirements.txt \
        | uv pip install --no-deps -r /dev/stdin

    - name: Run tests
      run: |
        uv run python3 -m unittest discover -s exporter -p "test_*.py"

  build:
    needs:
      - test
      - changed_files
    if: needs.changed_files.outputs.changed_python == 'true' || needs.changed_files.outputs.changed_docker == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
